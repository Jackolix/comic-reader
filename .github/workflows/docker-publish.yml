name: Build and Push Docker Images

on:
  push:
    branches: [ main, dev ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  FRONTEND_IMAGE_NAME: ${{ github.repository_owner }}/comic-reader
  RUST_SERVER_IMAGE_NAME: ${{ github.repository_owner }}/comic-rust-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Convert repository names to lowercase
      - name: Convert to lowercase
        id: string
        run: |
          echo "frontend_image=${FRONTEND_IMAGE_NAME,,}" >> $GITHUB_OUTPUT
          echo "rust_server_image=${RUST_SERVER_IMAGE_NAME,,}" >> $GITHUB_OUTPUT

      # Set the Docker tag based on the branch
      - name: Set Docker tag
        id: docker_tag
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            echo "tag=dev" >> $GITHUB_OUTPUT
          fi

      # Build and push frontend
      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.string.outputs.frontend_image }}:${{ steps.docker_tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Set up Rust for the Rust server
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Build and push Rust server
      - name: Build and push Rust server Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.string.outputs.rust_server_image }}:${{ steps.docker_tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
